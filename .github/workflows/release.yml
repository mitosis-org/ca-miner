name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release"
        required: true
        default: "v0.1.0"

env:
  CARGO_TERM_COLOR: always

# Add permissions for the workflow
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: Build Release Binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: ca-miner-linux-x86_64
            use_cross: false

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: ca-miner-linux-x86_64-musl
            use_cross: true

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: ca-miner-linux-aarch64
            use_cross: true

          - target: x86_64-apple-darwin
            os: macos-latest
            name: ca-miner-macos-x86_64
            use_cross: false

          - target: aarch64-apple-darwin
            os: macos-latest
            name: ca-miner-macos-aarch64
            use_cross: false

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: ca-miner-windows-x86_64.exe
            use_cross: false

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        if: matrix.use_cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Install native dependencies (Linux native)
        if: matrix.os == 'ubuntu-latest' && !matrix.use_cross
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary (Cross)
        if: matrix.use_cross
        run: cross build --release --target ${{ matrix.target }}

      - name: Build release binary (Native)
        if: ${{ !matrix.use_cross }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux and macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            # For cross-compiled aarch64, the strip tool might not be available
            # Let's check if the binary exists and try to strip it
            if command -v aarch64-linux-gnu-strip >/dev/null 2>&1; then
              aarch64-linux-gnu-strip target/${{ matrix.target }}/release/ca-miner
            else
              echo "aarch64-linux-gnu-strip not found, skipping strip"
            fi
          else
            strip target/${{ matrix.target }}/release/ca-miner
          fi

      - name: Create archive (Linux and macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.name }}.tar.gz ca-miner
          cd ../../..

      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }}.zip ca-miner.exe
          cd ../../..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}.tar.gz
            ${{ matrix.name }}.zip

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -la

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name || github.event.inputs.tag }}
          name: CA Miner ${{ github.ref_name || github.event.inputs.tag }}
          body: |
            ## CA Miner ${{ github.ref_name || github.event.inputs.tag }}

            High-performance Ethereum contract address miner for CREATE2 and CREATE3 patterns.

            ### ðŸš€ Quick Start

            Download the appropriate binary for your platform below and run:

            ```bash
            # CREATE2 mining example
            ./ca-miner create2 \
              0x4e59b44847b379578588920cA78FbF26c0B4956C \
              0x1234567890123456789012345678901234567890123456789012345678901234 \
              dead \
              --max-iterations 1000000
            ```

            ### ðŸ“¦ Installation

            1. Download the binary for your platform from the assets below
            2. Extract the archive: `tar -xzf ca-miner-*.tar.gz` (Linux/macOS) or unzip (Windows)
            3. Make it executable: `chmod +x ca-miner` (Linux/macOS)
            4. Run `./ca-miner --help` to see all options

            ### ðŸ”— Links

            - [Documentation](https://github.com/mitosis-org/ca-miner#readme)
            - [Source Code](https://github.com/mitosis-org/ca-miner)
            - [Issues](https://github.com/mitosis-org/ca-miner/issues)

            ---

            **Full Changelog**: https://github.com/mitosis-org/ca-miner/compare/v0.0.0...${{ github.ref_name || github.event.inputs.tag }}
          draft: false
          prerelease: false
          files: |
            */ca-miner-linux-x86_64.tar.gz
            */ca-miner-linux-x86_64-musl.tar.gz
            */ca-miner-linux-aarch64.tar.gz
            */ca-miner-macos-x86_64.tar.gz
            */ca-miner-macos-aarch64.tar.gz
            */ca-miner-windows-x86_64.exe.zip
